# Licensed under the MIT License
# https://github.com/craigahobbs/chisel/blob/main/LICENSE


#
# The Chisel documentation application
#


async function chiselDoc()
    if vName != null then
        requestPage(vName)
    else then
        indexPage()
    endif
endfunction


async function indexPage()
    # Fetch the documentation index API
    docIndex = fetch('doc_index')
    title = objectGet(docIndex, 'title')
    groups = objectGet(docIndex, 'groups')

    # Render the index page
    setDocumentTitle(title)
    markdownPrint('# ' + markdownEscape(title))
    foreach groupName in arraySort(objectKeys(groups)) do
        markdownPrint('', '### ' + markdownEscape(groupName))
        foreach requestName in objectGet(groups, groupName) do
            markdownPrint('', '[' + markdownEscape(requestName) + "](#var.vName='" + encodeURIComponent(requestName) + "')")
        endforeach
    endforeach
endfunction


async function requestPage(typeName)
    # Fetch the request API
    docRequest = fetch('doc_request?name=' + encodeURIComponent(typeName))
    doc = objectGet(docRequest, 'doc')
    urls = objectGet(docRequest, 'urls')
    types = objectGet(docRequest, 'types')

    # Render the request page
    setDocumentTitle(typeName)
    markdownPrint('[Index](#var=)')

    # Action request?
    if types != null then
        elementModelRender(schemaElements(types, typeName, urls))
        return
    endif

    # Non-action request
    markdownPrint('', '# ' + markdownEscape(typeName))
    if doc != null then
        markdownPrint('', doc)
    endif
    if urls != null && arrayLength(urls) > 0 then
        markdownPrint('', '**Note:** The request is exposed at the following ' + if(arrayLength(urls) == 1, 'URL:', 'URLs:'))
        foreach requestURL in urls do
            method = objectGet(requestURL, 'method')
            path = objectGet(requestURL, 'path')
            markdownPrint('', stringFromCharCode(160, 160) + '[' + markdownEscape(method) + ' ' + markdownEscape(path) + '](' + path + ')')
        endforeach
    endif
endfunction
