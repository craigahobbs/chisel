# Licensed under the MIT License
# https://github.com/craigahobbs/chisel/blob/main/LICENSE


#
# The Chisel documentation application
#


async function chiselDoc():
    if vName != null:
        requestPage(vName)
    else:
        indexPage()
    endif
endfunction


async function indexPage():
    # Fetch the documentation index API
    indexURL = 'doc_index'
    docIndex = systemFetch(indexURL)
    if docIndex == null:
        markdownPrint('**Error:** Failed to fetch chisel index API "' + indexURL + '"')
        return
    endif
    title = objectGet(docIndex, 'title')
    groups = objectGet(docIndex, 'groups')

    # Render the index page
    documentSetTitle(title)
    markdownPrint('# ' + markdownEscape(title))
    for groupName in arraySort(objectKeys(groups)):
        markdownPrint('', '## ' + markdownEscape(groupName))
        for requestName in arraySort(objectGet(groups, groupName)):
            markdownPrint('', '[' + markdownEscape(requestName) + "](#var.vName='" + urlEncodeComponent(requestName) + "')")
        endfor
    endfor
endfunction


async function requestPage(typeName):
    # Fetch the request API
    requestURL = 'doc_request?name=' + urlEncodeComponent(typeName)
    docRequest = systemFetch(requestURL)
    if docRequest == null:
        markdownPrint('**Error:** Failed to fetch chisel request API "' + requestURL + '"')
        return
    endif
    doc = objectGet(docRequest, 'doc')
    urls = objectGet(docRequest, 'urls')
    types = objectGet(docRequest, 'types')

    # Render the request page
    documentSetTitle(typeName)
    markdownPrint('[Index](#var=)')

    # Action request?
    if types != null:
        elementModelRender(schemaElements(types, typeName, urls))
        return
    endif

    # Non-action request
    markdownPrint('', '# ' + markdownEscape(typeName))
    if doc != null:
        markdownPrint('', doc)
    endif
    if urls != null && arrayLength(urls) > 0:
        markdownPrint('', '**Note:** The request is exposed at the following ' + if(arrayLength(urls) == 1, 'URL:', 'URLs:'))
        for requestURL in urls:
            method = objectGet(requestURL, 'method', '')
            path = objectGet(requestURL, 'path')
            markdownPrint('', '&nbsp;&nbsp;[' + markdownEscape(method) + ' ' + markdownEscape(path) + '](' + path + ')')
        endfor
    endif
endfunction
